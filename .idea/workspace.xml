<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:release" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e6029c40-a173-461b-97f8-55837e48d18d" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.empty-mod/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/.empty-mod/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/archive/tar_linux_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/archive/tar_linux_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/archive/tar_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/archive/tar_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/archive/tar_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/archive/tar_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/archive/time_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/archive/time_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cio/io_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/cio/io_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cio/io_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/cio/io_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/containerd-shim/main_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/containerd-shim/main_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/containerd/command/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/containerd/command/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/containerd/command/service_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/containerd/command/service_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/containers/checkpoint.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/containers/checkpoint.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/containers/containers.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/containers/containers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/containers/restore.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/containers/restore.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/content/content.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/content/content.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/images/convert.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/images/convert.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/images/export.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/images/export.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/images/images.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/images/images.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/images/mount.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/images/mount.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/images/pull.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/images/pull.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/images/unmount.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/images/unmount.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/namespaces/namespaces.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/namespaces/namespaces.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/oci/oci.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/oci/oci.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/run/run.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/run/run.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/snapshots/snapshots.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/snapshots/snapshots.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/ctr/commands/tasks/start.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/ctr/commands/tasks/start.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/container_checkpoint_opts.go" beforeDir="false" afterPath="$PROJECT_DIR$/container_checkpoint_opts.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/container_opts.go" beforeDir="false" afterPath="$PROJECT_DIR$/container_opts.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/content/helpers.go" beforeDir="false" afterPath="$PROJECT_DIR$/content/helpers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/content/local/readerat.go" beforeDir="false" afterPath="$PROJECT_DIR$/content/local/readerat.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/content/local/store.go" beforeDir="false" afterPath="$PROJECT_DIR$/content/local/store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/content/testsuite/testsuite.go" beforeDir="false" afterPath="$PROJECT_DIR$/content/testsuite/testsuite.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contrib/apparmor/apparmor.go" beforeDir="false" afterPath="$PROJECT_DIR$/contrib/apparmor/apparmor.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/diff/lcow/lcow.go" beforeDir="false" afterPath="$PROJECT_DIR$/diff/lcow/lcow.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/diff/stream_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/diff/stream_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/diff/walking/differ.go" beforeDir="false" afterPath="$PROJECT_DIR$/diff/walking/differ.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/events/exchange/exchange.go" beforeDir="false" afterPath="$PROJECT_DIR$/events/exchange/exchange.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/filters/parser.go" beforeDir="false" afterPath="$PROJECT_DIR$/filters/parser.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/filters/quote.go" beforeDir="false" afterPath="$PROJECT_DIR$/filters/quote.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gc/scheduler/scheduler.go" beforeDir="false" afterPath="$PROJECT_DIR$/gc/scheduler/scheduler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/images/archive/importer.go" beforeDir="false" afterPath="$PROJECT_DIR$/images/archive/importer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/images/archive/reference.go" beforeDir="false" afterPath="$PROJECT_DIR$/images/archive/reference.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/images/handlers.go" beforeDir="false" afterPath="$PROJECT_DIR$/images/handlers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/images/mediatypes.go" beforeDir="false" afterPath="$PROJECT_DIR$/images/mediatypes.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/install.go" beforeDir="false" afterPath="$PROJECT_DIR$/install.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/integration/client/container_linux_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/integration/client/container_linux_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/integration/client/content_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/integration/client/content_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/integration/client/daemon_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/integration/client/daemon_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/integration/container_stats_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/integration/container_stats_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/integration/imagefs_info_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/integration/imagefs_info_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/labels/validate.go" beforeDir="false" afterPath="$PROJECT_DIR$/labels/validate.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/metadata/containers.go" beforeDir="false" afterPath="$PROJECT_DIR$/metadata/containers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/metadata/content.go" beforeDir="false" afterPath="$PROJECT_DIR$/metadata/content.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/metadata/db.go" beforeDir="false" afterPath="$PROJECT_DIR$/metadata/db.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/metadata/db_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/metadata/db_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/metadata/gc.go" beforeDir="false" afterPath="$PROJECT_DIR$/metadata/gc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/metadata/images.go" beforeDir="false" afterPath="$PROJECT_DIR$/metadata/images.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/metadata/images_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/metadata/images_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/metadata/leases.go" beforeDir="false" afterPath="$PROJECT_DIR$/metadata/leases.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/metadata/leases_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/metadata/leases_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/metadata/snapshot_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/metadata/snapshot_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mount/fmountat_linux_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/mount/fmountat_linux_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mount/mount_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/mount/mount_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/oci/spec_opts.go" beforeDir="false" afterPath="$PROJECT_DIR$/oci/spec_opts.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cap/cap_linux.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cap/cap_linux.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/io/helpers_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/io/helpers_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/opts/spec.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/opts/spec.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/container_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/container_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/container_start.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/container_start.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/container_stats_list_linux.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/container_stats_list_linux.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/container_status.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/container_status.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/container_stop.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/container_stop.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/image_pull.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/image_pull.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/image_status.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/image_status.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/sandbox_portforward_other.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/sandbox_portforward_other.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/sandbox_portforward_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/sandbox_portforward_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/sandbox_run_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/sandbox_run_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/sandbox_status.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/sandbox_status.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/server/service_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/server/service_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/cri/store/image/image.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/cri/store/image/image.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/netns/netns_other.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/netns/netns_other.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/process/deleted_state.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/process/deleted_state.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/process/exec.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/process/exec.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/process/exec_state.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/process/exec_state.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/process/init.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/process/init.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/process/init_state.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/process/init_state.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/process/io.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/process/io.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/process/utils.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/process/utils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/registrar/registrar.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/registrar/registrar.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/ttrpcutil/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/ttrpcutil/client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/plugin/plugin.go" beforeDir="false" afterPath="$PROJECT_DIR$/plugin/plugin.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pull.go" beforeDir="false" afterPath="$PROJECT_DIR$/pull.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/restart/monitor/change.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/restart/monitor/change.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/restart/monitor/monitor.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/restart/monitor/monitor.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/v1/linux/task.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/v1/linux/task.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/v1/shim/client/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/v1/shim/client/client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/v2/binary.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/v2/binary.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/v2/bundle.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/v2/bundle.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/v2/manager.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/v2/manager.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/v2/process.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/v2/process.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/v2/runc/v2/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/v2/runc/v2/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/v2/shim.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/v2/shim.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/v2/shim/shim_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/v2/shim/shim_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/v2/shim_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/v2/shim_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/runtime/v2/shim_windows_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/runtime/v2/shim_windows_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/containers/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/containers/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/content/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/content/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/snapshots/devmapper/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/snapshots/devmapper/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/snapshots/devmapper/metadata.go" beforeDir="false" afterPath="$PROJECT_DIR$/snapshots/devmapper/metadata.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/snapshots/lcow/lcow.go" beforeDir="false" afterPath="$PROJECT_DIR$/snapshots/lcow/lcow.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/snapshots/storage/metastore.go" beforeDir="false" afterPath="$PROJECT_DIR$/snapshots/storage/metastore.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sys/filesys_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/sys/filesys_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sys/reaper/reaper_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/sys/reaper/reaper_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sys/socket_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/sys/socket_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/task.go" beforeDir="false" afterPath="$PROJECT_DIR$/task.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/task_opts.go" beforeDir="false" afterPath="$PROJECT_DIR$/task_opts.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/task_opts_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/task_opts_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tracing/tracing.go" beforeDir="false" afterPath="$PROJECT_DIR$/tracing/tracing.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/unpacker.go" beforeDir="false" afterPath="$PROJECT_DIR$/unpacker.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/containerd/btrfs/helpers.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/containerd/btrfs/helpers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/containerd/continuity/devices/devices_windows.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/containerd/continuity/devices/devices_windows.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/containerd/continuity/fs/copy.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/containerd/continuity/fs/copy.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/containerd/continuity/fs/copy_linux.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/containerd/continuity/fs/copy_linux.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/containerd/continuity/fs/diff_unix.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/containerd/continuity/fs/diff_unix.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/github.com/containerd/ttrpc/unixcreds_linux.go" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/github.com/containerd/ttrpc/unixcreds_linux.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/local/Cellar/go/1.13.4/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1w1e4MHlG1HxLJplXCCCfjkyU8F" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Module.GOPATH.is.expanded" value="false" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RunManager" selected="Go Test.overlay_test.go">
    <configuration name="TestStatError in github.com/containerd/containerd/pkg/cri/server" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="containerd" />
      <working_directory value="$PROJECT_DIR$/pkg/cri/server" />
      <kind value="PACKAGE" />
      <package value="github.com/containerd/containerd/pkg/cri/server" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <framework value="gotest" />
      <pattern value="^TestStatError$" />
      <method v="2" />
    </configuration>
    <configuration name="overlay_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="containerd" />
      <working_directory value="$PROJECT_DIR$/snapshots/overlay" />
      <kind value="FILE" />
      <package value="github.com/containerd/containerd" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/snapshots/overlay/overlay_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.overlay_test.go" />
        <item itemvalue="Go Test.TestStatError in github.com/containerd/containerd/pkg/cri/server" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/containerd$overlay_test_go.out" NAME="overlay_test.go Coverage Results" MODIFIED="1631451171260" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>